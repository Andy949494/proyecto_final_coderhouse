<body>
    <div>
    <button type="button" class="delete-inactive-users">
    Eliminar usuarios inactivos
    </button><br><br>
    <a href="http://localhost:8080/api/users/logout">
    <button>Cerrar sesión</button>
    </a><br><br>
    <a href="http://localhost:8080/products">
    <button>Volver a productos</button>
    </a><br><br>
</div>
<div>
<h1>Usuarios</h1>            

    {{#if isValid}}
<table>
                        <tr>
                            <th>Id</th>
                            <th>First name</th>
                            <th>Last name</th>
                            <th>Email</th>
                            <th>Age</th>
                            <th>Cart</th>
                            <th>Role</th>
                            <th>Documents</th>
                            <th>Last connection</th>
                        </tr>
                        {{#each docs}}
                        <tr>
                            <td>{{this._id}}</td>
                            <td>{{this.firstname}}</td>
                            <td>{{this.lastname}}</td>
                            <td>{{this.email}}</td>
                            <td>{{this.age}}</td>
                            <td>{{this.cart}}</td>
                            <td>{{this.role}}</td>
                            <td>
                            {{#each this.documents}}
                                    Names: {{this.name}}<br>
                                    Reference: <a href="{{this.reference}}">{{this.reference}}</a>
                            {{/each}}
                            </td>
                            <td>{{this.last_connection}}</td>

                            
                            <td><button type="button" class="modify-role-button" data-user-id="{{this._id}}">
                                    Modificar rol
                                </button><br><br>
                                <button class="delete-user-button" data-user-id="{{this._id}}">
                                    Eliminar usuario
                                </button>
                            </td>
                        </tr>
                        {{/each}} 
                    </table>
</div>
<div>
    {{#if hasPrevPage}}
        <a href={{this.prevLink}}><< Anterior</a>
    {{/if}}
    &nbsp;
    {{this.page}}
    &nbsp;
     {{#if hasNextPage}}
        <a href={{this.nextLink}}>Siguiente >></a>
    {{/if}} 
</div>
{{else}}
<h1>No hay usuarios para mostrar</h1>
{{/if}}

<script>
document.addEventListener("DOMContentLoaded", () => {

    const modifyRoleButtons = document.querySelectorAll('.modify-role-button');

    modifyRoleButtons.forEach(button => {
        button.addEventListener('click', async () => {
            const userId = button.getAttribute('data-user-id');

            if (confirm('¿Estás seguro de que deseas modificar el rol de este usuario?')) {
                try {
                    const response = await fetch(`/api/users/premium/${userId}`, {
                        method: 'POST',
                    });

                    const responseData = await response.json();

                    if (response.ok) {
                        alert('Rol de usuario modificado exitosamente.');
                        location.reload();
                    } else {
                        if (responseData && responseData.error === 'No ha terminado de cargar toda la documentación necesaria.') {
                            alert('No ha terminado de cargar toda la documentación necesaria.');
                        } else if (responseData.error === 'No puede actualizar usuarios que no sean user o premium.'){
                            alert('No puede actualizar usuarios que no sean user o premium.');
                        } else {
                            alert('Error al modificar el rol del usuario.');
                        }
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            }
        });
    });

    const deleteButtons = document.querySelectorAll(".delete-user-button");

    deleteButtons.forEach((button) => {
        button.addEventListener("click", (e) => {
            e.preventDefault();

            const userId = button.getAttribute("data-user-id");

            if (confirm("¿Estás seguro de que deseas eliminar este usuario?")) {
                fetch(`/api/users/${userId}`, {
                    method: "DELETE",
                })
                    .then((response) => {
                        if (response.ok) {
                            alert("Usuario eliminado exitosamente.");
                                location.reload();
                        } else {
                            alert("Error al eliminar el usuario.");
                        }
                    })
                    .catch((error) => {
                        console.error("Error de red:", error);
                    });
            }
        });
    });

    const deleteInactiveUsersButton = document.querySelector(".delete-inactive-users");

    if (deleteInactiveUsersButton) {
        deleteInactiveUsersButton.addEventListener("click", async () => {
            if (confirm("¿Estás seguro de que deseas eliminar usuarios inactivos?")) {
                try {
                    const response = await fetch(`/api/users/`, {
                        method: "DELETE",
                    });

                    const responseData = await response.json();

                    if (response.ok) {
                        if (responseData.status === "success") {
                            alert(`Se enviará un correo informativo a cada dirección. ${responseData.payload}`);
                        }
                        location.reload();
                    } else {
                        if (responseData && responseData.error === "No hay usuarios con última conexión anterior a los últimos dos días.") {
                            alert("No hay usuarios con última conexión anterior a los últimos dos días.");
                        } else {
                            alert("Error al eliminar usuarios inactivos.");
                        }
                    }
                } catch (error) {
                    console.error("Error:", error);
                }
            }
        });
    }
});
</script>
</body>