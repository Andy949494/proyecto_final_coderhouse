<body>
<a href="http://localhost:8080/api/users/logout">
<button>Cerrar sesión</button>
</a><br><br>
<a href="http://localhost:8080/products">
<button>Volver a productos</button>
</a><br><br>
<div class="container p-4">
    <div class="row justify-content-center align-items-center">
        <div class="col-md4 mx-auto">
            <div class="card">
                <div class="card-body">              
                    <table>
                        <td colspan="9"><h3>Carrito</h3>&nbsp&nbsp&nbsp&nbsp
                            <button class="vaciar-carrito" data-cart-id="{{result._id}}">Vaciar carrito</button>&nbsp&nbsp
                            <button class="comprar" data-cart-id="{{result._id}}">Realizar compra</button></td>
                        <tr>
                            <th>Título</th>
                            <th>Descripción</th>
                            <th>Categoría</th>
                            <th>Stock</th>
                            <th>Precio</th>
                            <th>Cantidad</th>
                            {{!-- {{result._id}} --}}

                        </tr>
                        <tr>
                        {{#each result.products}}
                        <td>{{this.product.title}}</td>
                        <td>{{this.product.description}}</td>
                        <td>{{this.product.category}}</td>
                        <td>{{this.product.stock}}</td>
                        <td>${{this.product.price}}</td>
                        <td>{{this.quantity}}</td>
                        <td>
                            <button class="eliminar-del-carrito" data-product-id="{{this.product._id}}" data-cart-id="{{../result._id}}">Eliminar producto</button><br><br>
                            <form class="modificar-cantidad">
                                <input type="number" name="newQuantity" min="1" max="{{this.product.stock}}" value="1">
                                <button type="submit" class="modificar-cantidad-button" data-product-id="{{this.product._id}}" data-cart-id="{{../result._id}}">Establecer cantidad</button>
                            </form>
                        </td>
                    </tr>
                {{/each}}

                   
                    </table>                    
                </div>
            </div>
        </div>
    </div>
</div>
</body>

<script>
document.addEventListener("DOMContentLoaded", () => {

    const deleteButton = document.querySelectorAll(".eliminar-del-carrito");
    deleteButton.forEach((button) => {
        button.addEventListener("click", (e) => {
            e.preventDefault();

            const productId = button.getAttribute('data-product-id');
            const cartId = button.getAttribute('data-cart-id');
            

            if (confirm("¿Estás seguro de que deseas eliminar este producto?")) {
                fetch(`/api/carts/${cartId}/product/${productId}`, {
                    method: "DELETE",
                })
                    .then((response) => {
                        if (response.ok) {
                            alert("Producto eliminado exitosamente.");
                                location.reload();
                        } else {
                            alert("Error al eliminar el producto.");
                        }
                    })
                    .catch((error) => {
                        console.error("Error de red:", error);
                    });
            }
        });
    });

    const modifyQuantityForm = document.querySelectorAll(".modificar-cantidad");
    modifyQuantityForm.forEach((form) => {
        form.addEventListener("submit", (e) => {
            e.preventDefault();

            const productId = form.querySelector('[data-product-id]').getAttribute('data-product-id');
            const cartId = form.querySelector('[data-cart-id]').getAttribute('data-cart-id');
            const newQuantity = form.querySelector('input[name="newQuantity"]').value;

            if (newQuantity <= 0 || newQuantity > parseInt(form.querySelector('[max]').getAttribute('max'))) {
                alert("La cantidad ingresada no es válida.");
                return;
            }

            fetch(`/api/carts/${cartId}/product/${productId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ quantity: newQuantity }),
            })
                .then((response) => {
                    if (response.ok) {
                        alert("Cantidad modificada exitosamente.");
                        location.reload();
                    } else {
                        alert("Error al modificar la cantidad.");
                    }
                })
                .catch((error) => {
                    console.error("Error de red:", error);
                });
        });
    });

    const vaciarCarritoButton = document.querySelector(".vaciar-carrito");
    vaciarCarritoButton.addEventListener("click", (e) => {
        e.preventDefault();

        const cartId = vaciarCarritoButton.getAttribute("data-cart-id");

        if (confirm("¿Estás seguro de que deseas vaciar el carrito?")) {
            fetch(`/api/carts/${cartId}`, {
                method: "DELETE",
            })
                .then((response) => {
                    if (response.ok) {
                        alert("Carrito vaciado exitosamente.");
                        location.reload();
                    } else {
                        alert("Error al vaciar el carrito.");
                    }
                })
                .catch((error) => {
                    console.error("Error de red:", error);
                });
        }
    });

    const comprarButton = document.querySelector(".comprar");
    comprarButton.addEventListener("click", (e) => {
        e.preventDefault();

        const cartId = comprarButton.getAttribute("data-cart-id");

        if (confirm("¿Estás seguro de que deseas realizar la compra?")) {
            fetch(`/api/carts/${cartId}/purchase`, {
                method: "POST",
            })
                .then((response) => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        alert("Error al realizar la compra.");
                        throw new Error("Error al realizar la compra.");
                    }
                })
                .then((data) => {
                    alert(`¡Compra realizada con éxito! Su carrito será vaciado.`);
                    location.reload();
                })
                .catch((error) => {
                    console.error("Error de red:", error);
                });
        }
    });
});
</script>